//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using UnityEngine;
using co.chimeralabs.ads.managed;

namespace ChimeraVirtualAds
{
	public class ImageTextureAdInstanceUnity
	{
		private String adUnitId;
		private String adInstanceId;
		private ImageTextureAdInstance instance;
		private AdObjectUnity adObjectUnity;
		public event EventHandler<EventArgs> OnAdLoaded = delegate {};
		public event EventHandler<EventArgs> OnAdLoadFailed = delegate {};
		private bool isAdLoaded = false;
		private bool isAdDisplayed = false;
		
		public ImageTextureAdInstanceUnity (GameObject adObject, Camera camera, String adUnitId, String adInstanceId)
		{
			adObjectUnity = new AdObjectUnity (adObject, camera);
			//adObjectUnity.GetAdObject().GetComponent<Renderer> ().material.mainTexture = ((TextureUnity)instance.GetDiffuseTexture()).GetTextureObject();
			this.adUnitId = adUnitId;
			this.adInstanceId = adInstanceId;
		}
		public String GetAdUnitId(){
			return this.adUnitId;
		}
		public String GetAdInstanceId(){
			return this.adInstanceId;
		}
		public AdObjectUnity GetAdObject(){
			return this.adObjectUnity;
		}
		public void SetInstance(ImageTextureAdInstance inst){
			this.instance = inst;
		}
		public ImageTextureAdInstance GetInstance(){
			return this.instance;
		}
		public void CallOnAdUnitLoaded(){
			this.isAdLoaded = true;
			OnAdLoaded (this, EventArgs.Empty);
		}
		public void CallOnAdUnitLoadFailed(EventArgs args){
			OnAdLoadFailed (this, args);
		}
		public void Update(){
			if (this.isAdLoaded) {
				if (!this.isAdDisplayed) {
					this.isAdDisplayed = true;
					Material material = adObjectUnity.GetAdObject ().GetComponent<Renderer> ().material;
					material.SetFloat("_Glossiness", 0.0f);
					material.mainTexture = ((TextureUnity)instance.GetDiffuseTexture ()).GetTextureObject ();
				}
				instance.UpdateVisibilityMetric ();
			}
		}
	}
}

