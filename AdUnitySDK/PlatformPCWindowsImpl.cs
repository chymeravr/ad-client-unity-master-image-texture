//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Net;
using System.Runtime.InteropServices;
using co.chimeralabs.ads.managed;
using UnityEngine;
using Newtonsoft.Json;

namespace ChimeraVirtualAds
{
	public class PlatformPCWindowsImpl:IPlatform
	{
		[DllImport("PCWindowsSDK", EntryPoint = "GetUserId")]
		private static extern void GetUserId(int[] retValue);
		[DllImport("PCWindowsSDK", EntryPoint = "Test")]
		private static extern int Test();
		[DllImport("PCWindowsSDK", EntryPoint = "IntegerArray")]
		private static extern void IntegerArray (int [] integerArray);

		private String urlForLocation = "http://ip-api.com/json";//Using api from http://ip-api.com/docs/api:json#
		private String userId = null;
		private String location = null;
		public PlatformPCWindowsImpl ()
		{
			//FetchLocation ();
		}

		/**
		 * Fetch IP based location
		 */
/*		IEnumerator FetchLocation(){
			WWW www = new WWW (urlForLocation);
			yield return www;
			if (www.error == null) {
				LocationData locationData = JsonConvert.DeserializeObject<LocationData>(www.text);
				if(locationData.city != null){
					location = locationData.city;
				}
				else if(locationData.country != null){
					location = locationData.country;
				}
				else{
					location = "";
				}
			} else {
				location = "";
			}
		}
*/
		public String GetUserId(){
			if (userId != null)
				return userId;
			int[] retValue = new int[32];
			//char[] stringValue = new char[32];
			String id = "";
			GetUserId (retValue);
			int i = 0;
			while (retValue[i]!=0) {
				//stringValue[i] = (char)retValue[i];
				id += (char)retValue[i];
				i++;
			}
			//stringValue [i] = '\0';
			//String s = new String (stringValue);
			//return s;
			return id;
		}
		public void Initialize(){
		}
		public String GetOS(){
			return "Windows";
		}
		public String GetDevice(){
			return "PC";
		}
		public String GetLocation(){
			if(location != null)
				return location;
			WebClient webClient = new WebClient ();
			String data = webClient.DownloadString (urlForLocation);
			if (data == null) {
				location = "";
				return location;
			}
			LocationData locationData = JsonConvert.DeserializeObject<LocationData>(data);
			if(locationData.city != null){
				location = locationData.city;
			}
			else if(locationData.country != null){
				location = locationData.country;
			}
			else{
				location = "";
			}
			return location;
		}
		private class LocationData{
			public String city;
			public String country;
		}
	}
}

