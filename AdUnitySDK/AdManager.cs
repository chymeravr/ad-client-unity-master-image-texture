//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using UnityEngine;
using UnityEngine.VR;
using co.chimeralabs.ads.managed;

namespace ChimeraVirtualAds
{
	public static class AdManager
	{
		private static Hashtable adUnits = new Hashtable();
		private static Hashtable adInstances = new Hashtable ();
		private static Hashtable instancesByUnits = new Hashtable ();
		static AdManager(){
			PlatformObjectsFactoryHolder.SetFactory(new PlatformObjectsFactoryUnity());
		}
		public static void RegisterImageTextureAdUnit(ImageTextureAdInstanceUnity instance, int nDistinctAds){
			if (adInstances [instance.GetAdInstanceId ()] == null) {
				adInstances.Add(instance.GetAdInstanceId(), instance);
				if(instancesByUnits[instance.GetAdUnitId()] == null) {
					instancesByUnits.Add(instance.GetAdUnitId(), new ArrayList());
				}
				((ArrayList)instancesByUnits[instance.GetAdUnitId()]).Add(instance.GetAdInstanceId());
			} else { //duplicate adinstanceid
			}
			if (adUnits [instance.GetAdUnitId()] == null) {
				ImageTextureAdUnitListener listener = new ImageTextureAdUnitListener();
				ImageTextureAdUnit adUnit = new ImageTextureAdUnit(listener, instance.GetAdUnitId());
				adUnits.Add(instance.GetAdUnitId(), adUnit);
				adUnit.LoadAds (nDistinctAds);
			}
		}
		public static ArrayList GetInstanceIdsByAdUnitId(String adUnitId){
			return (ArrayList)instancesByUnits [adUnitId];
		}
		public static Hashtable GetAdUnitsHashTable(){
			return adUnits;
		}
		public static ImageTextureAdInstanceUnity GetImageTextureAdInstanceUnity(String adInstanceId){
			return (ImageTextureAdInstanceUnity)adInstances [adInstanceId];
		}
	}
	public class ImageTextureAdUnitListener : AdUnitListener
	{
		public void OnAdUnitLoadFailed(AdUnitFailedArgs args)
		{
			ArrayList instanceIds = AdManager.GetInstanceIdsByAdUnitId (args.adUnitId);
			foreach (String instanceId in instanceIds) {
				ImageTextureAdInstanceUnity instance = AdManager.GetImageTextureAdInstanceUnity(instanceId);
				instance.CallOnAdUnitLoadFailed(args);
			}
		}
		public void OnAdUnitLoaded(System.Object context)
		{
			//AdManager.GetAdsLoaded ().Add ( ((ImageTextureAdUnit)context).GetAdUnitId() , true);
			ImageTextureAdUnit adUnit = (ImageTextureAdUnit)context;
			ArrayList instanceIds = AdManager.GetInstanceIdsByAdUnitId (adUnit.GetAdUnitId());
			foreach (String instanceId in instanceIds) {
				ImageTextureAdInstanceUnity instance = AdManager.GetImageTextureAdInstanceUnity(instanceId);
				instance.SetInstance(adUnit.CreateInstance(instance.GetAdInstanceId(), instance.GetAdObject()));
				instance.CallOnAdUnitLoaded();
			}
		}
	}
}

